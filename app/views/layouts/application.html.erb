<!DOCTYPE html>
<html>
  <head>
    <title>Earthquakes</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <link rel='preload' href='/blank_map2.svg' as='image'>
    <link rel='preload' href='/quake_export.json' as='fetch' crossorigin='anonymous'>
  </head>
  <body>
    <%= yield %>
  </body>
  <script>
    // TODO: externs and such https://lispcast.com/clojurescript-externs/.
    window.fastQuakeFilter = function(ids, list) {
      var output = [];
      var list_index = 0;
      ids.forEach(function(id) {
        while (id !== list[list_index]._id) {
          list_index += 1;
        }
        output.push(list[list_index])
        list_index += 1;
      })
      return output;
    }

    window.longLatFinder = function(list) {
      var minLat = 90;
      var maxLat = -90;
      var minLong = 180;
      var maxLong = -180;
      list.forEach(function(item) {
        if (item.latitude < minLat) { minLat = item.latitude }
        if (item.latitude > maxLat) { maxLat = item.latitude }
        if (item.longitude < minLong) { minLong = item.longitude }
        if (item.longitude > maxLong) { maxLong = item.longitude }
      })
      return [minLat, maxLat, minLong, maxLong];
    }

    function DSVToArray(res) {
      return res.text().then(function(strData) {
        console.time('DSV');
        var lines= strData.split('\n');
        var out = [];
        var headers = lines[0].split('|');
        debugger;
        for (var i = 1; i<lines.length; i++) {
          var obj = {};
          var currentline = lines[i].split('|');
          for (var j = 0; j < headers.length; j++) {
            obj[headers[j]] = currentline[j];
          }
          out.push(obj);
        }
        console.timeEnd('DSV');
        console.log(out);
        return out;
      })
    }
  </script>
  <%= javascript_include_tag cljs_main_path %>
</html>
